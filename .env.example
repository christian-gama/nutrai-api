# ======================== Application ========================
# Application configuration.

# APP_ENV is the application environment.
# dev | prod | test
APP_ENV="dev"

# APP_HOST is the application host. It's usually the IP address of the machine.
APP_HOST="localhost"

# APP_PORT is the application port. It will be used to listen to incoming.
APP_PORT=8080

# APP_ALLOWED_ORIGINS is a list of origins a cross-domain request can be executed from.
# If the special "*" value is present in the list, all origins will be allowed.
# To create a list of allowed origins, use "," (comma) as the delimiter.
# For example: origin1,origin2,origin3
APP_ALLOWED_ORIGINS="*"


# ========================== Config ===========================
# Application configuration.

# CONFIG_GLOBAL_RATE_LIMIT is the global rate limit for the API. The expected value is in
# requests per minute. If the value is 0, the rate limit will be disabled.
CONFIG_GLOBAL_RATE_LIMIT=0

# CONFIG_DEBUG is the debug mode. It will enable some debug features like the stack
# trace in the response body.
CONFIG_DEBUG=false

# CONFIG_LOG_LEVEL is the logging configuration for the application.
# debug | info | warn | error | panic
CONFIG_LOG_LEVEL="info"



# ========================= Database ==========================
# The application uses PostgreSQL as the database. It's a free and open-source relational database
# management system. Read more about it here: https://www.postgresql.org/

# DB_Host is the database host (IP address or domain) to connect to. Do not use the Docker
# container IP address, as the application handles it automatically.
DB_HOST="localhost"

# DB_NAME can be used to define a different name for the default database that is created when the
# instance is first started.
DB_NAME="db-name"

# DB_PASSWORD must not be empty or undefined. This environment variable sets the superuser
# password for	the database.
DB_PASSWORD="password"

# DB_PORT is the database port.
DB_PORT=5432

# DB_SSL_MODE is the database SSL mode. It expects "disable", "allow", "prefer", "require",
# "verify-ca" or "verify-full". Please refer to the SQL driver documentation for more
# information.
DB_SSL_MODE="disable"

# DB_USER is used in connection with the database password. This variable will create the
# specified user with superuser power and a database with the same name.
DB_USER="username"

# DB_MAX_OPEN_CONNS is the maximum number of open connections to the database.
DB_MAX_OPEN_CONNS=100

# DB_MAX_IDLE_CONNS is the maximum number of connections in the idle connection pool.
DB_MAX_IDLE_CONNS=10

# DB_CONN_MAX_LIFETIME is the maximum amount of time a connection may be reused.
# s="second | m = minute | h = hour | d = day"
DB_CONN_MAX_LIFETIME="1h"



# ========================== Redis ============================
# Redis is an open source (BSD licensed), in-memory data structure store, used as a database,
# cache and message broker. Read more about it here: https://redis.io/

# REDIS_HOST is the Redis host (IP address or domain) to connect to. Do not use the Docker
# container IP address, as the application handles it automatically.
REDIS_HOST="localhost"

# REDIS_PORT is the Redis port.
REDIS_PORT=6379

# REDIS_PASSWORD is the Redis password.
REDIS_PASSWORD="password"



# =========================== JWT =============================
# Json Web Token (JWT) is a compact URL-safe means of representing claims to be transferred
# between two parties. The claims in a JWT are encoded as a JSON object that is used as the
# payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption
# (JWE) structure, enabling the claims to be digitally signed or integrity protected with a
# Message Authentication Code (MAC) and/or encrypted.
# Read more about it here: https://jwt.io/

# JWT_SECRET is the JWT secret key.
JWT_SECRET="secret"

# JWT_ACCESS_EXPIRE is the JWT access token expiration time.
# s="second | m = minute | h = hour | d = day"
JWT_ACCESS_EXPIRE="15m"

# JWT_REFRESH_EXPIRE is the JWT refresh token expiration time.
# s="second | m = minute | h = hour | d = day"
JWT_REFRESH_EXPIRE="30d"

# JWT_AUDIENCE is the JWT audience.
JWT_AUDIENCE="https://yourdomain.com"

# JWT_ISSUER is the JWT issuer.
JWT_ISSUER="https://yourdomain.com"



# ==================== RabbitMQ =====================
# RabbitMQ is a message broker that implements the Advanced Message Queuing Protocol (AMQP).
# It's used to send messages between services.
# Read more about it here: https://www.rabbitmq.com/

# Host is the RabbitMQ host (IP address or domain) to connect to. Do not use the Docker
# container IP address, as the application handles it automatically.
RABBITMQ_HOST="localhost"

# RabbitMQ nodes will use a port from a certain range known as the inter-node communication
# port range. The same port is used by CLI tools when they need to contact the node. The range
# can be modified.
RABBITMQ_PORT=5672

# RABBITMQ_USER is the RabbitMQ user.User name to create when RabbitMQ creates a new database from
# scratch.
RABBITMQ_USER="guest"

# Password is the default user password.
RABBITMQ_PASSWORD="guest"



# ===================== Mailer ======================
# General configuration for the mailer. The mailer is used to send emails to users. It can be
# used to send emails for account confirmation, password reset, etc.

# MAILER_PROVIDER is the mailer provider.
# mailtrap | sendgrid
MAILER_PROVIDER="mailtrap"

# MAILER_FROM is the mailer from address.
MAILER_FROM="nutrai.team@gmail.com"

# MAILER_FROM_NAME is the mailer from name.
MAILER_FROM_NAME="Nutrai Team"



# ===================== MailTrap ======================
# MailTrap is a fake SMTP server for development teams to test, view and share emails sent from the
# development and staging environments without spamming real customers. It's a paid service, but
# it's free for a limited number of emails. You can create an account here:
# https://mailtrap.io/register/signup?ref=header

# MAILTRAP_HOST is the mailer host.
MAILTRAP_HOST="sandbox.smtp.mailtrap.io"

# MAILTRAP_PORT is the mailer port.
MAILTRAP_PORT=2525

# MAILTRAP_USERNAME is the mailer username.
MAILTRAP_USERNAME="your_mailtrap_user"

# MAILTRAP_PASSWORD is the mailer password.
MAILTRAP_PASSWORD="your_mailtrap_password"



# ===================== SendGrid ======================
# SendGrid is a cloud-based SMTP provider that allows you to send email without having to maintain
# email servers. It's a paid service, but it's free for the a limited number of emails. You can
# create an account here: https://signup.sendgrid.com/

# SENDGRID_API_KEY is the SendGrid API key.
SENDGRID_API_KEY="your_sendgrid_api_key"
