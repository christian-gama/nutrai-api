// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// Handler is an autogenerated mock type for the Handler type
type Handler[P interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *Handler[P]) Execute(_a0 *gin.Context, _a1 *P) {
	_m.Called(_a0, _a1)
}

type mockConstructorTestingTNewHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewHandler creates a new instance of Handler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHandler[P interface{}](t mockConstructorTestingTNewHandler) *Handler[P] {
	mock := &Handler[P]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
