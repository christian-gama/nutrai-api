// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"
)

// Dialector is an autogenerated mock type for the dialector type
type Dialector struct {
	mock.Mock
}

// Execute provides a mock function with given fields: dsn
func (_m *Dialector) Execute(dsn string) gorm.Dialector {
	ret := _m.Called(dsn)

	var r0 gorm.Dialector
	if rf, ok := ret.Get(0).(func(string) gorm.Dialector); ok {
		r0 = rf(dsn)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gorm.Dialector)
		}
	}

	return r0
}

type mockConstructorTestingTNewDialector interface {
	mock.TestingT
	Cleanup(func())
}

// NewDialector creates a new instance of Dialector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDialector(t mockConstructorTestingTNewDialector) *Dialector {
	mock := &Dialector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
