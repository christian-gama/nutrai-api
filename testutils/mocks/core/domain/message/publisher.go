// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Publisher is an autogenerated mock type for the Publisher type
type Publisher[Data interface{}] struct {
	mock.Mock
}

// Handle provides a mock function with given fields: data
func (_m *Publisher[Data]) Handle(data Data) {
	_m.Called(data)
}

type mockConstructorTestingTNewPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewPublisher creates a new instance of Publisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPublisher[Data interface{}](t mockConstructorTestingTNewPublisher) *Publisher[Data] {
	mock := &Publisher[Data]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
