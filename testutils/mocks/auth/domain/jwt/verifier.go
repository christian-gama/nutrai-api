// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	jwt "github.com/christian-gama/nutrai-api/internal/auth/domain/jwt"
	mock "github.com/stretchr/testify/mock"

	value "github.com/christian-gama/nutrai-api/internal/auth/domain/value/jwt"
)

// Verifier is an autogenerated mock type for the Verifier type
type Verifier struct {
	mock.Mock
}

// Verify provides a mock function with given fields: token, checkIsStored
func (_m *Verifier) Verify(token value.Token, checkIsStored bool) (*jwt.Claims, error) {
	ret := _m.Called(token, checkIsStored)

	var r0 *jwt.Claims
	var r1 error
	if rf, ok := ret.Get(0).(func(value.Token, bool) (*jwt.Claims, error)); ok {
		return rf(token, checkIsStored)
	}
	if rf, ok := ret.Get(0).(func(value.Token, bool) *jwt.Claims); ok {
		r0 = rf(token, checkIsStored)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*jwt.Claims)
		}
	}

	if rf, ok := ret.Get(1).(func(value.Token, bool) error); ok {
		r1 = rf(token, checkIsStored)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewVerifier interface {
	mock.TestingT
	Cleanup(func())
}

// NewVerifier creates a new instance of Verifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewVerifier(t mockConstructorTestingTNewVerifier) *Verifier {
	mock := &Verifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
