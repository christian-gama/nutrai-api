// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	command "github.com/christian-gama/nutrai-api/internal/exception/app/command"

	mock "github.com/stretchr/testify/mock"
)

// RecoveryHandler is an autogenerated mock type for the RecoveryHandler type
type RecoveryHandler struct {
	mock.Mock
}

// ConsumerHandler provides a mock function with given fields: input
func (_m *RecoveryHandler) ConsumerHandler(input command.RecoveryInput) error {
	ret := _m.Called(input)

	var r0 error
	if rf, ok := ret.Get(0).(func(command.RecoveryInput) error); ok {
		r0 = rf(input)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Handle provides a mock function with given fields:
func (_m *RecoveryHandler) Handle() {
	_m.Called()
}

type mockConstructorTestingTNewRecoveryHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewRecoveryHandler creates a new instance of RecoveryHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRecoveryHandler(t mockConstructorTestingTNewRecoveryHandler) *RecoveryHandler {
	mock := &RecoveryHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
