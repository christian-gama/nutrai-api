// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// SendWelcomeHandler is an autogenerated mock type for the SendWelcomeHandler type
type SendWelcomeHandler struct {
	mock.Mock
}

// ConsumerHandler provides a mock function with given fields: body
func (_m *SendWelcomeHandler) ConsumerHandler(body []byte) error {
	ret := _m.Called(body)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Handle provides a mock function with given fields:
func (_m *SendWelcomeHandler) Handle() {
	_m.Called()
}

type mockConstructorTestingTNewSendWelcomeHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewSendWelcomeHandler creates a new instance of SendWelcomeHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSendWelcomeHandler(t mockConstructorTestingTNewSendWelcomeHandler) *SendWelcomeHandler {
	mock := &SendWelcomeHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
