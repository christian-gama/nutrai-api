// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mail "github.com/christian-gama/nutrai-api/internal/notify/domain/model/mail"

	mock "github.com/stretchr/testify/mock"
)

// Mailer is an autogenerated mock type for the Mailer type
type Mailer struct {
	mock.Mock
}

// Send provides a mock function with given fields: ctx, _a1
func (_m *Mailer) Send(ctx context.Context, _a1 *mail.Mail) error {
	ret := _m.Called(ctx, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *mail.Mail) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMailer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMailer creates a new instance of Mailer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMailer(t mockConstructorTestingTNewMailer) *Mailer {
	mock := &Mailer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
